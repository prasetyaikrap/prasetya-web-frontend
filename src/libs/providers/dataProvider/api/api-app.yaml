openapi: 3.0.0
info:
  title: Sonar Lauk API Service
  description: Prasetya Platform API
  version: 1.0.0
  contact:
    email: prasetya.ikrapriyadi@gmail.com
servers:
  - url: https://prasetyapriyadi.my.id/api
    description: Production
tags:
  - name: Authentication
    description: Endpoint to manage Authentication Configuration
  - name: Administrator
    description: Endpoint to manage Administrator Configuration

paths:
  /v1/authentications:
    post:
      tags:
        - Authentication
      summary: Login Admin User
      description: Login User as an Administrator
      operationId: postLoginAdmin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationLoginPayload"
      responses:
        "200":
          description: Success Login Admin response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationLoginResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/BaseErrorResponse"
    get:
      tags:
        - Authentication
      summary: Verify Admin user from access token
      description: Verify User Admin based on access token
      operationId: getVerifyAdmin
      responses:
        "200":
          description: Success Verify Admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationVerifyResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/BaseErrorResponse"
    put:
      tags:
        - Authentication
      summary: Renew token Admin user
      description: Renew access token for expired token for User Administrator
      operationId: putRenewAdmin
      responses:
        "200":
          description: Success Renew Admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationRenewResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/BaseErrorResponse"
    delete:
      tags:
        - Authentication
      summary: Logout Admin user
      description: Logout User Admin and removing session
      operationId: deleteLogoutAdmin
      responses:
        "200":
          description: Success Logout Admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationLogoutResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/BaseErrorResponse"

  /v1/admins:
    post:
      tags:
        - Administrator
      summary: Create Admin User
      description: Create new Administrator User
      operationId: postCreateAdmin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdministratorCreatePayload"
      responses:
        "200":
          description: Success Create Admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorCreateResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/BaseErrorResponse"
    get:
      tags:
        - Administrator
      summary: Get Admin User List
      description: Get list of Administrator User Information
      operationId: getAdminList
      responses:
        "200":
          description: Success Get Admin List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorGetListResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/BaseErrorResponse"
  /v1/admins/{id}:
    get:
      tags:
        - Administrator
      summary: Get Admin User
      description: Get a single Administrator User Information
      operationId: getAdmin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success Get Admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorGetResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/BaseErrorResponse"
    put:
      tags:
        - Administrator
      summary: Update Admin User
      description: Update information of single Administrator User
      operationId: putUpdateAdmin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdministratorUpdatePayload"
      responses:
        "200":
          description: Success Update Admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorUpdateResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/BaseErrorResponse"

components:
  schemas:
    BaseMetadata:
      type: object
      required:
        [
          total_rows,
          current_page,
          total_page,
          per_page,
          previousCursor,
          nextCursor,
        ]
      properties:
        total_rows:
          type: number
        current_page:
          type: number
        total_page:
          type: number
        per_page:
          type: number
        previousCursor:
          type: string
        nextCursor:
          type: string
    BaseResponse:
      type: object
      required: [success, message]
      properties:
        success:
          type: boolean
        message:
          type: string
    BaseResponses:
      type: object
      required: [success, message, metadata]
      properties:
        success:
          type: boolean
        message:
          type: string
        metadata:
          $ref: "#/components/schemas/BaseMetadata"
    BaseErrorResponse:
      type: object
      required: [success, message, error]
      properties:
        success:
          type: boolean
        message:
          type: string
        error:
          type: object

    # Authentications
    AuthenticationLoginPayload:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string

    AuthenticationLoginResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          required: [data]
          properties:
            data:
              type: object
              required:
                [accessToken, accessTokenKey, refreshToken, refreshTokenKey]
              properties:
                accessToken:
                  type: string
                accessTokenKey:
                  type: string
                refreshToken:
                  type: string
                refreshTokenKey:
                  type: string
    AuthenticationVerifyResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          required: [data]
          properties:
            data:
              type: object
              required: [accessToken, accessTokenKey]
              properties:
                accessToken:
                  type: string
                accessTokenKey:
                  type: string
    AuthenticationRenewResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          required: [data]
          properties:
            data:
              type: object
              required: [accessToken, accessTokenKey]
              properties:
                accessToken:
                  type: string
                accessTokenKey:
                  type: string
    AuthenticationLogoutResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          required: [data]
          properties:
            data:
              type: object
              required: [accessTokenKey, refreshTokenKey]
              properties:
                accessTokenKey:
                  type: string
                refreshTokenKey:
                  type: string

    # Administrator
    AdministratorCreatePayload:
      type: object
      required: []
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
        email:
          type: string
        avatar:
          type: string
    AdministratorUpdatePayload:
      type: object
      required: []
      properties:
        name:
          type: string
        email:
          type: string
        avatar:
          type: string

    AdministratorCreateResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          required: [data]
          properties:
            data:
              type: object
              required: [id]
              properties:
                id:
                  type: string
    AdministratorGetResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          required: [data]
          properties:
            data:
              type: object
              required:
                [
                  id,
                  username,
                  name,
                  email,
                  avatar,
                  permissions,
                  created_at,
                  updated_at,
                ]
              properties:
                id:
                  type: string
                username:
                  type: string
                name:
                  type: string
                email:
                  type: string
                avatar:
                  type: string
                permissions:
                  type: array
                  items:
                    type: string
                created_at:
                  type: string
                updated_at:
                  type: string
    AdministratorGetListResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponses"
        - type: object
          required: [data]
          properties:
            data:
              type: array
              items:
                type: object
                required:
                  [id, username, name, email, avatar, created_at, updated_at]
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  avatar:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
    AdministratorUpdateResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          required: [data]
          properties:
            data:
              type: object
              required: [id]
              properties:
                id:
                  type: string

  responses:
    BaseResponse:
      description: Base Response Object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
    BaseResponses:
      description: Base Responses Object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponses"
    BaseErrorResponse:
      description: Base Error Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseErrorResponse"
    Unauthorized:
      description: Unauthorized Access
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseErrorResponse"
    NotFound:
      description: Service tidak ditemukan
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseErrorResponse"
